/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/ekNGe6dqdlI
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Caudex } from 'next/font/google'
import { Rethink_Sans } from 'next/font/google'

caudex({
  subsets: ['latin'],
  display: 'swap',
})

rethink_sans({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Table, TableHeader, TableRow, TableHead, TableBody, TableCell } from "@/components/ui/table"

export default function teacherPortal() {
  const [activeTab, setActiveTab] = useState("progress")
  const [activeAssignmentTab, setActiveAssignmentTab] = useState("current")
  return (
    (<div className="flex flex-col w-full min-h-screen bg-background">
      <header
        className="sticky top-0 z-10 flex items-center h-16 px-4 border-b bg-background shadow sm:px-6">
        <nav className="flex gap-6 text-lg font-medium md:gap-8">
          <Button
            variant="ghost"
            className={`px-4 py-2 rounded-md ${activeTab === "progress" ? "bg-muted" : ""}`}
            onClick={() => setActiveTab("progress")}>
            Progress
          </Button>
          <Button
            variant="ghost"
            className={`px-4 py-2 rounded-md ${activeTab === "quiz" ? "bg-muted" : ""}`}
            onClick={() => setActiveTab("quiz")}>
            Quiz
          </Button>
          <Button
            variant="ghost"
            className={`px-4 py-2 rounded-md ${activeTab === "assignments" ? "bg-muted" : ""}`}
            onClick={() => setActiveTab("assignments")}>
            Assignments
          </Button>
        </nav>
      </header>
      <main className="flex-1 p-4 sm:p-6">
        {activeTab === "progress" && (
          <div>
            <h2 className="text-2xl font-bold mb-4">Progress</h2>
            <div className="bg-muted rounded-lg p-4">
              <h3 className="text-lg font-bold mb-2">Leaderboard</h3>
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>Rank</TableHead>
                    <TableHead>Student</TableHead>
                    <TableHead>Score</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  <TableRow>
                    <TableCell>1</TableCell>
                    <TableCell>John Doe</TableCell>
                    <TableCell>95%</TableCell>
                  </TableRow>
                  <TableRow>
                    <TableCell>2</TableCell>
                    <TableCell>Jane Smith</TableCell>
                    <TableCell>92%</TableCell>
                  </TableRow>
                  <TableRow>
                    <TableCell>3</TableCell>
                    <TableCell>Bob Johnson</TableCell>
                    <TableCell>88%</TableCell>
                  </TableRow>
                  <TableRow>
                    <TableCell>4</TableCell>
                    <TableCell>Sarah Lee</TableCell>
                    <TableCell>85%</TableCell>
                  </TableRow>
                  <TableRow>
                    <TableCell>5</TableCell>
                    <TableCell>Tom Wilson</TableCell>
                    <TableCell>82%</TableCell>
                  </TableRow>
                </TableBody>
              </Table>
            </div>
          </div>
        )}
        {activeTab === "quiz" && (
          <div>
            <h2 className="text-2xl font-bold mb-4">Quiz</h2>
            <p>This is the quiz tab content.</p>
          </div>
        )}
        {activeTab === "assignments" && (
          <div>
            <div className="flex gap-4 mb-4">
              <Button
                variant="ghost"
                className={`px-4 py-2 rounded-md ${activeAssignmentTab === "current" ? "bg-muted" : ""}`}
                onClick={() => setActiveAssignmentTab("current")}>
                Current
              </Button>
              <Button
                variant="ghost"
                className={`px-4 py-2 rounded-md ${activeAssignmentTab === "previous" ? "bg-muted" : ""}`}
                onClick={() => setActiveAssignmentTab("previous")}>
                Previous
              </Button>
              <Button className="ml-auto flex items-center gap-2 px-6 py-3 text-lg font-medium">
                <PlusIcon className="h-5 w-5" />
                Create
              </Button>
            </div>
            {activeAssignmentTab === "current" && (
              <div>
                <h2 className="text-2xl font-bold mb-4">Current Assignments</h2>
                <Table>
                  <TableHeader>
                    <TableRow>
                      <TableHead>Name</TableHead>
                      <TableHead>Due Date</TableHead>
                      <TableHead>Actions</TableHead>
                    </TableRow>
                  </TableHeader>
                  <TableBody>
                    <TableRow>
                      <TableCell>Assignment 1</TableCell>
                      <TableCell>2023-06-30</TableCell>
                      <TableCell>
                        <div className="flex gap-2">
                          <Button variant="ghost" size="icon">
                            <EyeIcon className="w-4 h-4" />
                            <span className="sr-only">View</span>
                          </Button>
                          <Button variant="ghost" size="icon">
                            <FilePenIcon className="w-4 h-4" />
                            <span className="sr-only">Edit</span>
                          </Button>
                          <Button variant="ghost" size="icon">
                            <TrashIcon className="w-4 h-4" />
                            <span className="sr-only">Delete</span>
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                    <TableRow>
                      <TableCell>Assignment 2</TableCell>
                      <TableCell>2023-07-15</TableCell>
                      <TableCell>
                        <div className="flex gap-2">
                          <Button variant="ghost" size="icon">
                            <EyeIcon className="w-4 h-4" />
                            <span className="sr-only">View</span>
                          </Button>
                          <Button variant="ghost" size="icon">
                            <FilePenIcon className="w-4 h-4" />
                            <span className="sr-only">Edit</span>
                          </Button>
                          <Button variant="ghost" size="icon">
                            <TrashIcon className="w-4 h-4" />
                            <span className="sr-only">Delete</span>
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                    <TableRow>
                      <TableCell>Assignment 3</TableCell>
                      <TableCell>2023-08-01</TableCell>
                      <TableCell>
                        <div className="flex gap-2">
                          <Button variant="ghost" size="icon">
                            <EyeIcon className="w-4 h-4" />
                            <span className="sr-only">View</span>
                          </Button>
                          <Button variant="ghost" size="icon">
                            <FilePenIcon className="w-4 h-4" />
                            <span className="sr-only">Edit</span>
                          </Button>
                          <Button variant="ghost" size="icon">
                            <TrashIcon className="w-4 h-4" />
                            <span className="sr-only">Delete</span>
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                  </TableBody>
                </Table>
              </div>
            )}
            {activeAssignmentTab === "previous" && (
              <div>
                <h2 className="text-2xl font-bold mb-4">Previous Assignments</h2>
                <Table>
                  <TableHeader>
                    <TableRow>
                      <TableHead>Name</TableHead>
                      <TableHead>Due Date</TableHead>
                      <TableHead>View</TableHead>
                    </TableRow>
                  </TableHeader>
                  <TableBody>
                    <TableRow>
                      <TableCell>Assignment 4</TableCell>
                      <TableCell>2023-05-31</TableCell>
                      <TableCell>
                        <div className="flex gap-2">
                          <Button variant="ghost" size="icon">
                            <EyeIcon className="w-4 h-4" />
                            <span className="sr-only">View</span>
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                    <TableRow>
                      <TableCell>Assignment 5</TableCell>
                      <TableCell>2023-04-15</TableCell>
                      <TableCell>
                        <div className="flex gap-2">
                          <Button variant="ghost" size="icon">
                            <EyeIcon className="w-4 h-4" />
                            <span className="sr-only">View</span>
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                    <TableRow>
                      <TableCell>Assignment 6</TableCell>
                      <TableCell>2023-03-01</TableCell>
                      <TableCell>
                        <div className="flex gap-2">
                          <Button variant="ghost" size="icon">
                            <EyeIcon className="w-4 h-4" />
                            <span className="sr-only">View</span>
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                  </TableBody>
                </Table>
              </div>
            )}
          </div>
        )}
      </main>
    </div>)
  );
}

function EyeIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z" />
      <circle cx="12" cy="12" r="3" />
    </svg>)
  );
}


function FilePenIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M12 22h6a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v10" />
      <path d="M14 2v4a2 2 0 0 0 2 2h4" />
      <path d="M10.4 12.6a2 2 0 1 1 3 3L8 21l-4 1 1-4Z" />
    </svg>)
  );
}


function PlusIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>)
  );
}


function TrashIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M3 6h18" />
      <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6" />
      <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2" />
    </svg>)
  );
}
